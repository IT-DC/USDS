// This file must be autogenerated

#ifndef USDS_SERIALIZER
#define USDS_SERIALIZER

#include <string.h>

#include "ticketSales.h"

class UsdsSerializer
{
public:
	UsdsSerializer();
	UsdsSerializer(int doc_typical_size);
	~UsdsSerializer();
	
	// Settings
	int setUsdsVersion(unsigned char major, unsigned char minor);
	int setDictionaryVersion(unsigned char major, unsigned char minor);

	// Serialization
	int addHead();
	int addDictionary();
	int addToBody(TicketSales* data);
	int addControl();
	int addIndex();
	int getUSDS(unsigned char** data, int* size);
	int clean();		// it does not release memory in buffer
	int deleteUSDS();	// it release memory and create new buffer with the default size (binary_typical_size or 4 kb)

private:
	// settings
	unsigned char usds_major;
	unsigned char usds_minor;
	unsigned char dictionary_major;
	unsigned char dictionary_minor;
	int full_dictionary_version;
	
	// Current status
	bool head_added;
	bool dictionary_added;
	bool body_added;
	bool body_finished;
	bool control_added;
	bool index_added;

	// Buffer for USDS document
	int default_doc_size;
	unsigned char* usds_buff;
	unsigned char* buff_last_pos;		// It is a position after last valid position in the Buffer. The Buffer size is buff_last_pos - usds_buff
	unsigned char* buff_current_pos;	// Last claen position in the Buffer. The document size is buff_current_pos - usds_buff
	
	inline int resizeArray(int minIncrease);
	inline int addVarint(int value);
	inline void addLEInt(int value);
	inline void addLETimestamp64(time_t value);
	inline void addLEDouble(double value);
	inline int addStringUTF8NoConvert(char* value, int max_size);
	inline void addBool(bool value);
};


#endif