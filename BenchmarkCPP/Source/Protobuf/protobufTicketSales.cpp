// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufTicketSales.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Protobuf\protobufTicketSales.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ProtobufTicketSales_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtobufTicketSales_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProtobufTicketSales_ProtobufVoucher_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtobufTicketSales_ProtobufVoucher_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protobufTicketSales_2eproto() {
  protobuf_AddDesc_protobufTicketSales_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protobufTicketSales.proto");
  GOOGLE_CHECK(file != NULL);
  ProtobufTicketSales_descriptor_ = file->message_type(0);
  static const int ProtobufTicketSales_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales, shiftnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales, cashregister_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales, start_shift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales, end_shift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales, vouchers_),
  };
  ProtobufTicketSales_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtobufTicketSales_descriptor_,
      ProtobufTicketSales::default_instance_,
      ProtobufTicketSales_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtobufTicketSales));
  ProtobufTicketSales_ProtobufVoucher_descriptor_ = ProtobufTicketSales_descriptor_->nested_type(0);
  static const int ProtobufTicketSales_ProtobufVoucher_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales_ProtobufVoucher, voucher_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales_ProtobufVoucher, summ_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales_ProtobufVoucher, goods_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales_ProtobufVoucher, time_of_sell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales_ProtobufVoucher, status_),
  };
  ProtobufTicketSales_ProtobufVoucher_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProtobufTicketSales_ProtobufVoucher_descriptor_,
      ProtobufTicketSales_ProtobufVoucher::default_instance_,
      ProtobufTicketSales_ProtobufVoucher_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales_ProtobufVoucher, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtobufTicketSales_ProtobufVoucher, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProtobufTicketSales_ProtobufVoucher));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protobufTicketSales_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtobufTicketSales_descriptor_, &ProtobufTicketSales::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProtobufTicketSales_ProtobufVoucher_descriptor_, &ProtobufTicketSales_ProtobufVoucher::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protobufTicketSales_2eproto() {
  delete ProtobufTicketSales::default_instance_;
  delete ProtobufTicketSales_reflection_;
  delete ProtobufTicketSales_ProtobufVoucher::default_instance_;
  delete ProtobufTicketSales_ProtobufVoucher_reflection_;
}

void protobuf_AddDesc_protobufTicketSales_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031protobufTicketSales.proto\"\223\002\n\023Protobuf"
    "TicketSales\022\023\n\013ShiftNumber\030\001 \002(\005\022\024\n\014Cash"
    "Register\030\002 \002(\007\022\023\n\013start_Shift\030\003 \002(\006\022\021\n\te"
    "nd_Shift\030\004 \002(\006\0226\n\010vouchers\030\005 \003(\0132$.Proto"
    "bufTicketSales.ProtobufVoucher\032q\n\017Protob"
    "ufVoucher\022\026\n\016voucher_number\030\001 \002(\005\022\014\n\004sum"
    "m\030\002 \002(\001\022\022\n\ngoods_name\030\003 \002(\t\022\024\n\014time_of_s"
    "ell\030\004 \002(\006\022\016\n\006status\030\005 \002(\010", 305);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobufTicketSales.proto", &protobuf_RegisterTypes);
  ProtobufTicketSales::default_instance_ = new ProtobufTicketSales();
  ProtobufTicketSales_ProtobufVoucher::default_instance_ = new ProtobufTicketSales_ProtobufVoucher();
  ProtobufTicketSales::default_instance_->InitAsDefaultInstance();
  ProtobufTicketSales_ProtobufVoucher::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protobufTicketSales_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protobufTicketSales_2eproto {
  StaticDescriptorInitializer_protobufTicketSales_2eproto() {
    protobuf_AddDesc_protobufTicketSales_2eproto();
  }
} static_descriptor_initializer_protobufTicketSales_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ProtobufTicketSales_ProtobufVoucher::kVoucherNumberFieldNumber;
const int ProtobufTicketSales_ProtobufVoucher::kSummFieldNumber;
const int ProtobufTicketSales_ProtobufVoucher::kGoodsNameFieldNumber;
const int ProtobufTicketSales_ProtobufVoucher::kTimeOfSellFieldNumber;
const int ProtobufTicketSales_ProtobufVoucher::kStatusFieldNumber;
#endif  // !_MSC_VER

ProtobufTicketSales_ProtobufVoucher::ProtobufTicketSales_ProtobufVoucher()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufTicketSales.ProtobufVoucher)
}

void ProtobufTicketSales_ProtobufVoucher::InitAsDefaultInstance() {
}

ProtobufTicketSales_ProtobufVoucher::ProtobufTicketSales_ProtobufVoucher(const ProtobufTicketSales_ProtobufVoucher& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufTicketSales.ProtobufVoucher)
}

void ProtobufTicketSales_ProtobufVoucher::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  voucher_number_ = 0;
  summ_ = 0;
  goods_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_of_sell_ = GOOGLE_ULONGLONG(0);
  status_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtobufTicketSales_ProtobufVoucher::~ProtobufTicketSales_ProtobufVoucher() {
  // @@protoc_insertion_point(destructor:ProtobufTicketSales.ProtobufVoucher)
  SharedDtor();
}

void ProtobufTicketSales_ProtobufVoucher::SharedDtor() {
  if (goods_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete goods_name_;
  }
  if (this != default_instance_) {
  }
}

void ProtobufTicketSales_ProtobufVoucher::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtobufTicketSales_ProtobufVoucher::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtobufTicketSales_ProtobufVoucher_descriptor_;
}

const ProtobufTicketSales_ProtobufVoucher& ProtobufTicketSales_ProtobufVoucher::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobufTicketSales_2eproto();
  return *default_instance_;
}

ProtobufTicketSales_ProtobufVoucher* ProtobufTicketSales_ProtobufVoucher::default_instance_ = NULL;

ProtobufTicketSales_ProtobufVoucher* ProtobufTicketSales_ProtobufVoucher::New() const {
  return new ProtobufTicketSales_ProtobufVoucher;
}

void ProtobufTicketSales_ProtobufVoucher::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtobufTicketSales_ProtobufVoucher*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(voucher_number_, time_of_sell_);
    summ_ = 0;
    if (has_goods_name()) {
      if (goods_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        goods_name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtobufTicketSales_ProtobufVoucher::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufTicketSales.ProtobufVoucher)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 voucher_number = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &voucher_number_)));
          set_has_voucher_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_summ;
        break;
      }

      // required double summ = 2;
      case 2: {
        if (tag == 17) {
         parse_summ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &summ_)));
          set_has_summ();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_goods_name;
        break;
      }

      // required string goods_name = 3;
      case 3: {
        if (tag == 26) {
         parse_goods_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goods_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->goods_name().data(), this->goods_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "goods_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_time_of_sell;
        break;
      }

      // required fixed64 time_of_sell = 4;
      case 4: {
        if (tag == 33) {
         parse_time_of_sell:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &time_of_sell_)));
          set_has_time_of_sell();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_status;
        break;
      }

      // required bool status = 5;
      case 5: {
        if (tag == 40) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufTicketSales.ProtobufVoucher)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufTicketSales.ProtobufVoucher)
  return false;
#undef DO_
}

void ProtobufTicketSales_ProtobufVoucher::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufTicketSales.ProtobufVoucher)
  // required int32 voucher_number = 1;
  if (has_voucher_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->voucher_number(), output);
  }

  // required double summ = 2;
  if (has_summ()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->summ(), output);
  }

  // required string goods_name = 3;
  if (has_goods_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->goods_name().data(), this->goods_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "goods_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->goods_name(), output);
  }

  // required fixed64 time_of_sell = 4;
  if (has_time_of_sell()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->time_of_sell(), output);
  }

  // required bool status = 5;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufTicketSales.ProtobufVoucher)
}

::google::protobuf::uint8* ProtobufTicketSales_ProtobufVoucher::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufTicketSales.ProtobufVoucher)
  // required int32 voucher_number = 1;
  if (has_voucher_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->voucher_number(), target);
  }

  // required double summ = 2;
  if (has_summ()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->summ(), target);
  }

  // required string goods_name = 3;
  if (has_goods_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->goods_name().data(), this->goods_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "goods_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->goods_name(), target);
  }

  // required fixed64 time_of_sell = 4;
  if (has_time_of_sell()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->time_of_sell(), target);
  }

  // required bool status = 5;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufTicketSales.ProtobufVoucher)
  return target;
}

int ProtobufTicketSales_ProtobufVoucher::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 voucher_number = 1;
    if (has_voucher_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->voucher_number());
    }

    // required double summ = 2;
    if (has_summ()) {
      total_size += 1 + 8;
    }

    // required string goods_name = 3;
    if (has_goods_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->goods_name());
    }

    // required fixed64 time_of_sell = 4;
    if (has_time_of_sell()) {
      total_size += 1 + 8;
    }

    // required bool status = 5;
    if (has_status()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtobufTicketSales_ProtobufVoucher::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtobufTicketSales_ProtobufVoucher* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtobufTicketSales_ProtobufVoucher*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtobufTicketSales_ProtobufVoucher::MergeFrom(const ProtobufTicketSales_ProtobufVoucher& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_voucher_number()) {
      set_voucher_number(from.voucher_number());
    }
    if (from.has_summ()) {
      set_summ(from.summ());
    }
    if (from.has_goods_name()) {
      set_goods_name(from.goods_name());
    }
    if (from.has_time_of_sell()) {
      set_time_of_sell(from.time_of_sell());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtobufTicketSales_ProtobufVoucher::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufTicketSales_ProtobufVoucher::CopyFrom(const ProtobufTicketSales_ProtobufVoucher& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufTicketSales_ProtobufVoucher::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void ProtobufTicketSales_ProtobufVoucher::Swap(ProtobufTicketSales_ProtobufVoucher* other) {
  if (other != this) {
    std::swap(voucher_number_, other->voucher_number_);
    std::swap(summ_, other->summ_);
    std::swap(goods_name_, other->goods_name_);
    std::swap(time_of_sell_, other->time_of_sell_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtobufTicketSales_ProtobufVoucher::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtobufTicketSales_ProtobufVoucher_descriptor_;
  metadata.reflection = ProtobufTicketSales_ProtobufVoucher_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProtobufTicketSales::kShiftNumberFieldNumber;
const int ProtobufTicketSales::kCashRegisterFieldNumber;
const int ProtobufTicketSales::kStartShiftFieldNumber;
const int ProtobufTicketSales::kEndShiftFieldNumber;
const int ProtobufTicketSales::kVouchersFieldNumber;
#endif  // !_MSC_VER

ProtobufTicketSales::ProtobufTicketSales()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufTicketSales)
}

void ProtobufTicketSales::InitAsDefaultInstance() {
}

ProtobufTicketSales::ProtobufTicketSales(const ProtobufTicketSales& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ProtobufTicketSales)
}

void ProtobufTicketSales::SharedCtor() {
  _cached_size_ = 0;
  shiftnumber_ = 0;
  cashregister_ = 0u;
  start_shift_ = GOOGLE_ULONGLONG(0);
  end_shift_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtobufTicketSales::~ProtobufTicketSales() {
  // @@protoc_insertion_point(destructor:ProtobufTicketSales)
  SharedDtor();
}

void ProtobufTicketSales::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtobufTicketSales::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtobufTicketSales::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtobufTicketSales_descriptor_;
}

const ProtobufTicketSales& ProtobufTicketSales::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobufTicketSales_2eproto();
  return *default_instance_;
}

ProtobufTicketSales* ProtobufTicketSales::default_instance_ = NULL;

ProtobufTicketSales* ProtobufTicketSales::New() const {
  return new ProtobufTicketSales;
}

void ProtobufTicketSales::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProtobufTicketSales*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(shiftnumber_, end_shift_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  vouchers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProtobufTicketSales::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufTicketSales)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ShiftNumber = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shiftnumber_)));
          set_has_shiftnumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_CashRegister;
        break;
      }

      // required fixed32 CashRegister = 2;
      case 2: {
        if (tag == 21) {
         parse_CashRegister:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &cashregister_)));
          set_has_cashregister();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_start_Shift;
        break;
      }

      // required fixed64 start_Shift = 3;
      case 3: {
        if (tag == 25) {
         parse_start_Shift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &start_shift_)));
          set_has_start_shift();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_end_Shift;
        break;
      }

      // required fixed64 end_Shift = 4;
      case 4: {
        if (tag == 33) {
         parse_end_Shift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &end_shift_)));
          set_has_end_shift();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_vouchers;
        break;
      }

      // repeated .ProtobufTicketSales.ProtobufVoucher vouchers = 5;
      case 5: {
        if (tag == 42) {
         parse_vouchers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vouchers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_vouchers;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufTicketSales)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufTicketSales)
  return false;
#undef DO_
}

void ProtobufTicketSales::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufTicketSales)
  // required int32 ShiftNumber = 1;
  if (has_shiftnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shiftnumber(), output);
  }

  // required fixed32 CashRegister = 2;
  if (has_cashregister()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->cashregister(), output);
  }

  // required fixed64 start_Shift = 3;
  if (has_start_shift()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->start_shift(), output);
  }

  // required fixed64 end_Shift = 4;
  if (has_end_shift()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->end_shift(), output);
  }

  // repeated .ProtobufTicketSales.ProtobufVoucher vouchers = 5;
  for (int i = 0; i < this->vouchers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->vouchers(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufTicketSales)
}

::google::protobuf::uint8* ProtobufTicketSales::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufTicketSales)
  // required int32 ShiftNumber = 1;
  if (has_shiftnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shiftnumber(), target);
  }

  // required fixed32 CashRegister = 2;
  if (has_cashregister()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->cashregister(), target);
  }

  // required fixed64 start_Shift = 3;
  if (has_start_shift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->start_shift(), target);
  }

  // required fixed64 end_Shift = 4;
  if (has_end_shift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->end_shift(), target);
  }

  // repeated .ProtobufTicketSales.ProtobufVoucher vouchers = 5;
  for (int i = 0; i < this->vouchers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->vouchers(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufTicketSales)
  return target;
}

int ProtobufTicketSales::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ShiftNumber = 1;
    if (has_shiftnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shiftnumber());
    }

    // required fixed32 CashRegister = 2;
    if (has_cashregister()) {
      total_size += 1 + 4;
    }

    // required fixed64 start_Shift = 3;
    if (has_start_shift()) {
      total_size += 1 + 8;
    }

    // required fixed64 end_Shift = 4;
    if (has_end_shift()) {
      total_size += 1 + 8;
    }

  }
  // repeated .ProtobufTicketSales.ProtobufVoucher vouchers = 5;
  total_size += 1 * this->vouchers_size();
  for (int i = 0; i < this->vouchers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vouchers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtobufTicketSales::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProtobufTicketSales* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProtobufTicketSales*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProtobufTicketSales::MergeFrom(const ProtobufTicketSales& from) {
  GOOGLE_CHECK_NE(&from, this);
  vouchers_.MergeFrom(from.vouchers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shiftnumber()) {
      set_shiftnumber(from.shiftnumber());
    }
    if (from.has_cashregister()) {
      set_cashregister(from.cashregister());
    }
    if (from.has_start_shift()) {
      set_start_shift(from.start_shift());
    }
    if (from.has_end_shift()) {
      set_end_shift(from.end_shift());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProtobufTicketSales::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufTicketSales::CopyFrom(const ProtobufTicketSales& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufTicketSales::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->vouchers())) return false;
  return true;
}

void ProtobufTicketSales::Swap(ProtobufTicketSales* other) {
  if (other != this) {
    std::swap(shiftnumber_, other->shiftnumber_);
    std::swap(cashregister_, other->cashregister_);
    std::swap(start_shift_, other->start_shift_);
    std::swap(end_shift_, other->end_shift_);
    vouchers_.Swap(&other->vouchers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProtobufTicketSales::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtobufTicketSales_descriptor_;
  metadata.reflection = ProtobufTicketSales_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
