#ifndef USDS_TYPES_H
#define USDS_TYPES_H

#include "errorMessage.h"

namespace usds
{
	enum usdsTypesErrorCodes
	{
		USDS_TYPES__ERROR_TYPE_CODE = 1,
		USDS_TYPES__ERROR_ENCODE = 2
	};
	
	enum usdsTypes
	{
		USDS_NO_TYPE = 0,
		USDS_TAG = 1,
		USDS_BOOLEAN = 2,
		USDS_BYTE = 3,
		USDS_UBYTE = 4,
		USDS_SHORT = 5,
		USDS_USHORT = 6,
		USDS_INT = 7,
		USDS_UINT = 8,
		USDS_LONG = 9,
		USDS_ULONG = 10,
		USDS_INT128 = 11,
		USDS_UINT128 = 12,
		USDS_FLOAT = 13,
		USDS_DOUBLE = 14,
		USDS_VARINT = 15,
		USDS_UVARINT = 16,
		USDS_STRING = 17,
		USDS_ARRAY = 18,
		USDS_MAP = 19,
		USDS_POLYARRAY = 20,
		USDS_STRUCT = 21,
		USDS_FUNCTION = 22,
		USDS_LAST_TYPE = 23
	};

	enum usdsTypeSizes
	{
		USDS_NO_TYPE_SIZE = -1,
		USDS_TAG_SIZE = 0,
		USDS_BOOLEAN_SIZE = 1,
		USDS_BYTE_SIZE = 1,
		USDS_UBYTE_SIZE = 1,
		USDS_SHORT_SIZE = 2,
		USDS_USHORT_SIZE = 2,
		USDS_INT_SIZE = 4,
		USDS_UINT_SIZE = 4,
		USDS_LONG_SIZE = 8,
		USDS_ULONG_SIZE = 8,
		USDS_INT128_SIZE = 16,
		USDS_UINT128_SIZE = 16,
		USDS_FLOAT_SIZE = 4,
		USDS_DOUBLE_SIZE = 8,
		USDS_VARINT_SIZE = 0,
		USDS_UVARINT_SIZE = 0,
		USDS_STRING_SIZE = 0,
		USDS_ARRAY_SIZE = 0,
		USDS_MAP_SIZE = 0,
		USDS_POLYARRAY_SIZE = 0,
		USDS_STRUCT_SIZE = 0,
		USDS_FUNCTION_SIZE = 0,
		USDS_LAST_TYPE_SIZE = -1
	};

	enum usdsEncodes
	{
		USDS_NO_DEFAULT_ENCODE = 0,
		USDS_UTF8 = 2,
		USDS_UTF16 = 3,
		USDS_UTF32 = 4,
		USDS_UTF7 = 5,
		USDS_LAST_ENCODE = 6
	};

	extern const char* usdsTypeName(usdsTypes code) throw(...);
	
	// returns 0 if unfixed
	extern int32_t usdsTypeSize(usdsTypes code) throw(...);
	
	extern const char* usdsEncodeName(usdsEncodes code) throw(...);

	enum usdsSignature
	{
		USDS_MAJOR_SIGNATURE = '$',
		USDS_MINOR_SIGNATURE = 'S',
		USDS_MAJOR_VERSION = 1,
		USDS_MINOR_VERSION = 0,
		USDS_DICTIONARY_SIGNATURE = 'd',
		USDS_DICTIONARY_SIGNATURE_WITH_SIZE = 'D',
		USDS_TAG_SIGNATURE = 't',
		USDS_FIELD_SIGNATURE = 'f',
		USDS_TAG_RESTRICTION_SIGNATURE = 'R',
		USDS_TAG_RESTRICTION_NOT_ROOT_SIGNATURE = 'r',
		USDS_BODY_SIGNATURE = 'b',
		USDS_BODY_SIGNATURE_WITH_SIZE = 'B'
	};

};


#endif